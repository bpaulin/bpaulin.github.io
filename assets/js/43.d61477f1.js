(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{339:function(t,a,e){"use strict";e.r(a);var s=e(5),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/bpaulin/poc-backstage/tree/33628f40058e339d36a227c28a5dfd1a8adf07af",target:"_blank",rel:"noopener noreferrer"}},[t._v("Code associé à cet article"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("Pour d'obscures raison, j'entends beaucoup parler de "),a("a",{attrs:{href:"https://backstage.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("backstage"),a("OutboundLink")],1),t._v(" ces derniers temps. Je ne pense vraiment pas en avoir l'utilité pour mon usage personnel mais ca me fait un machin geek à faire de mon canapé!")]),t._v(" "),a("p",[t._v("Parce que installer un soft c'est pas de qu'il y a de plus motivant, j'ai d'autres objectifs/contraintes:")]),t._v(" "),a("ul",[a("li",[t._v("Je veux une vraie infra cloud: les datas en paas, l'applicatif en caas")]),t._v(" "),a("li",[t._v("Vu que ca ne rentrera pas dans un tier gratuit, je veux pouvoir créer le projet rapidement et le detruire completement à volonté.")]),t._v(" "),a("li",[t._v("Je veux un projet entierement versionné et automatisé. chaque clic sur une ihm sera un echec")]),t._v(" "),a("li",[t._v("Je veux quelque chose de très très simple, sans scalabilité et meme sans perf. je vais payer a l'heure et c'est juste un poc")])]),t._v(" "),a("p",[t._v("Concrètement je vais utiliser:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://cloud.google.com/sdk/gcloud",target:"_blank",rel:"noopener noreferrer"}},[t._v("gcloud"),a("OutboundLink")],1),t._v(" pour m'authentifier sur gcp")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.terraform.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("terraform"),a("OutboundLink")],1),t._v(" pour deployer l'infra")]),t._v(" "),a("li",[t._v("... et a priori c'est tout")])]),t._v(" "),a("p",[t._v("Pour créer:")]),t._v(" "),a("ul",[a("li",[t._v("une db postgres en paas")]),t._v(" "),a("li",[t._v("une instance en paas")]),t._v(" "),a("li",[t._v("un cluster gke")])]),t._v(" "),a("p",[t._v("Une fois le projet créé sous gcp, associé a un compte de facturation, tout est pret")]),t._v(" "),a("h2",{attrs:{id:"structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structure"}},[t._v("#")]),t._v(" Structure")]),t._v(" "),a("p",[t._v("Pour la suite, 2 vars d'env doivent etre définies. dans un "),a("strong",[t._v(".envrc")]),t._v(" ignoré par git par exemple:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TF_VAR_gcp_project")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("my-wonderful-project-1234\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TF_VAR_gcp_region")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("europe-west3\n")])])]),a("p",[t._v("Terraform a (la mauvaise d'idée d'avoir) besoin de stocker l'état de l'infra dans un fichier tfstate. Ce fichier sera utilisé en tant que source de vérité pour que terraform décide de ce qu'il a à faire.")]),t._v(" "),a("p",[t._v("Pour permettre une portabilité de ce projet d'un laptop à un autre, et plus tard vers un ci type github action, ce tfstate sera lui meme sur gcp.")]),t._v(" "),a("p",[t._v("Il y aura donc 2 dossier terraform:")]),t._v(" "),a("ul",[a("li",[t._v("le premier pour créer le storage, sans upload du tfstate. Cette partie sera executée une fois et a priori jamais supprimée")]),t._v(" "),a("li",[t._v("le 2ème pour réellement créer l'infra, et dont le tfstate sera sur le storage du 1er")])]),t._v(" "),a("p",[t._v("Je commence par me logguer sur gcp")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gcloud auth login\n")])])]),a("p",[t._v("et me placer sur le projet gcp voulu")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gcloud config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" project "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$TF_VAR_gcp_project")]),t._v("\n")])])]),a("h2",{attrs:{id:"terraform-backend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#terraform-backend"}},[t._v("#")]),t._v(" Terraform backend")]),t._v(" "),a("h3",{attrs:{id:"code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code"}},[t._v("#")]),t._v(" Code")]),t._v(" "),a("p",[t._v("Dans un dossier dédié, par exemple "),a("code",[t._v("mkdir -p terraform/backend")]),t._v(", j'ai besoin d'un seul fichier "),a("strong",[t._v("main.tf")]),t._v(" avec les instructions suvantes:")]),t._v(" "),a("p",[t._v("Pour commencer, j'indique que ce tf a besoin du "),a("a",{attrs:{href:"https://registry.terraform.io/providers/hashicorp/google/latest/docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("provider google"),a("OutboundLink")],1),t._v(" et je fixe la derniere version a date, la 4.27.0")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terraform")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required_providers")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("google")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"google"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("version")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.27.0"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Ensuite, je déclare les 2 variables nécessaires au déploiement: gcp_projet et gcp_region. Terraform ira chercher les valeurs via les vars d'env TF_VAR_ set au chapitre précédent.")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "gcp_project" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" string\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "gcp_region" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" string\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("J'ai maintenant tout pour configurer le provider google")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("provider"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "google" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("project")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.gcp_project\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("region")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.gcp_region\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Et, enfin, la création du storage a proprement parler:")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("resource "),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v('"google_storage_bucket"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tfstate"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"backstage-gcs"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.gcp_region\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"application"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application"}},[t._v("#")]),t._v(" Application")]),t._v(" "),a("p",[t._v("Initialiser terraform (télécharger les providers, init le tfstate local, etc)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("terraform init\n")])])]),a("p",[t._v("Appliquer les changements:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("terraform apply\n")])])]),a("p",[t._v("Ce projet n'a pas de tfstate distant donc si je change de laptop, je devrais importer la resource avant toute modification")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("terraform "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" google_storage_bucket.tfstate backstage-gcs\n")])])]),a("h2",{attrs:{id:"infrastructure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#infrastructure"}},[t._v("#")]),t._v(" Infrastructure")]),t._v(" "),a("h3",{attrs:{id:"backend-et-provider"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backend-et-provider"}},[t._v("#")]),t._v(" Backend et provider")]),t._v(" "),a("p",[t._v("Dans un autre dossier, par exemple "),a("code",[t._v("mkdir -p terraform/deploy")]),t._v(", j'ai besoin d'un autre fichier "),a("strong",[t._v("main.tf")]),t._v(". Tout le début du fichier est le même que celui du backend pour installer et configurer le provider et declarer les variables:")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terraform")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required_providers")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("google")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"google"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("version")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.27.0"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "gcp_project" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" string\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "gcp_region" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" string\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("provider"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "google" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("project")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.gcp_project\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("region")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.gcp_region\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Ce projet utilisera un backend distant, que je configure en précisant le nom du storage precedemment créé et le path (ici /tfstate/) a l'intérieur duquel terraform ecrira son tfstate.")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terraform")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("backend"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "gcs" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("bucket")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"backstage-gcs"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("prefix")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tfstate"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),a("p",[t._v("Aucune difficultée pour l'instance redis, je doit juste préciser la taille (le minimum et donc le moins cher = 1Gio)")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("resource "),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v('"google_redis_instance"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cache"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"backstage-redis"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("memory_size_gb")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"postgres"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postgres"}},[t._v("#")]),t._v(" Postgres")]),t._v(" "),a("p",[t._v("Gcp n'authorise pas la création d'une base si une autre base du même nom est supprimée depuis moins d'une semaine. C'est très pratique pour du disaster recovery mais ca ne m'arrange pas: Je veux payer la base QUE quand je m'en sers. Je vais souvent la supprimer un soir pour la recréer le lendemain donc je dois changer le nom à chaque fois.")]),t._v(" "),a("p",[t._v("Une solution pour ça est de passer par une chaine de charactere au hasard, fournie par le provider "),a("a",{attrs:{href:"https://registry.terraform.io/providers/hashicorp/random/latest/docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("random"),a("OutboundLink")],1),t._v(" que j'ajoute à mes pré-requis")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terraform")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required_providers")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("random")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"random"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("version")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.3.2"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("je peux maintenant déclarer une nouvelle resource "),a("strong",[t._v("random_string")]),t._v(". Cette resource sera set à chaque création de l'infra, sera ajoutée au tfstate et pourra donc servir aussi a identifier la base a supprimer.")]),t._v(" "),a("p",[t._v("4 caractères suffiront, et uniquement des minuscules:")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("resource "),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v('"random_string"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dbname"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("length")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("upper")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("special")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Je peux maintenant créer la base et l'instance, en supprimant la protection contre la suppression (le monde merveilleux des POC!) et en lui mettant la taille la plus petite et le disque le moins rapide (le monde merveilleux des side-projects!)")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("resource "),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v('"google_sql_database"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"database"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"backstage-db"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("instance")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" google_sql_database_instance.instance.name\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("resource "),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v('"google_sql_database_instance"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"instance"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"backstage-db-instance-'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("random_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dbname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("database_version")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POSTGRES_14"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("deletion_protection")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("settings")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("tier")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"db-f1-micro"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("disk_type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PD_HDD"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes"}},[t._v("#")]),t._v(" Kubernetes")]),t._v(" "),a("p",[t._v("Objectivement, créer UN cluster pour UNE app est un non sens absolu mais parce que je veux un projet totalement autonome, que je veux montrer que c'est faisable et que c'est moi qui décide... je crée un cluster")]),t._v(" "),a("p",[t._v("je fais au plus simple, en créant un cluster autopilot (gcp gère tout et me facture au cpu/ram)")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("resource "),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v('"google_container_cluster"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"primary"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"backstage-gke"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("location")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.gcp_region\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("enable_autopilot")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ip_allocation_policy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"application-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-2"}},[t._v("#")]),t._v(" Application")]),t._v(" "),a("p",[t._v("Initialiser terraform (télécharger les providers, init le tfstate gcs, etc)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("terraform init\n")])])]),a("p",[t._v("Appliquer les changements (le faire 2 fois pour vérifier l'idempotence). A itre d'information, l'opération prend une dizaine de minutes")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("terraform apply\n")])])]),a("p",[t._v("Et surtout, surtout! ne pas oublier une fois le geekage fini de tout supprimer. A titre d'information, l'opération prend 2/3 minutes.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("terraform destroy\n")])])]),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/bpaulin/poc-backstage/tree/33628f40058e339d36a227c28a5dfd1a8adf07af",target:"_blank",rel:"noopener noreferrer"}},[t._v("Code associé à cet article"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);